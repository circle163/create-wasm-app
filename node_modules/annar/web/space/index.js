"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _web = require("../web");

var _classnames = _interopRequireDefault(require("classnames"));

var _common = require("../common");

var prefixCls = (0, _common.getPrefixCls)('space');

var renderItems = function renderItems(children, size, direction) {
  var itemStyle = undefined;

  if (typeof size === 'number') {
    itemStyle = direction === 'vertical' ? {
      marginBottom: size
    } : {
      marginRight: size
    };
  }

  var items = [];
  React.Children.forEach(children, function (child, index) {
    var itemCn = (0, _classnames["default"])("".concat(prefixCls, "-item"), (0, _defineProperty2["default"])({}, "".concat(prefixCls, "-").concat(direction, "-").concat(size), typeof size === 'string' && size));

    if (child === undefined || child === null) {
      return;
    }

    items.push( /*#__PURE__*/React.createElement(_web.View, {
      key: index,
      className: itemCn,
      style: itemStyle
    }, child));
  });
  return items;
};

var Space = function Space(props) {
  var _props$size = props.size,
      size = _props$size === void 0 ? 'small' : _props$size,
      _props$direction = props.direction,
      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,
      _props$align = props.align,
      align = _props$align === void 0 ? direction === 'horizontal' ? 'center' : undefined : _props$align,
      style = props.style,
      className = props.className,
      children = props.children;
  var cn = (0, _classnames["default"])(prefixCls, "".concat(prefixCls, "-").concat(direction), (0, _defineProperty2["default"])({}, "".concat(prefixCls, "-align-").concat(align), align), className);
  return /*#__PURE__*/React.createElement(_web.View, {
    className: cn,
    style: style
  }, renderItems(children, size, direction));
};

var _default = Space;
exports["default"] = _default;