"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _react = _interopRequireWildcard(require("react"));

var _web = require("../web");

var _classnames = _interopRequireDefault(require("classnames"));

var _context = require("./context");

var _common = require("../common");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var prefixCls = (0, _common.getPrefixCls)('form-item');

var FormItem = function FormItem(props) {
  var name = props.name,
      rules = props.rules,
      style = props.style,
      children = props.children;

  var _useContext = (0, _react.useContext)(_context.FormContext),
      values = _useContext.values,
      errors = _useContext.errors,
      onChange = _useContext.onChange,
      onChangeError = _useContext.onChangeError;

  var handleChange = function handleChange(e) {
    var error = name ? errors[name] || {} : {};

    if (Array.isArray(rules) && Object.keys(error).length > 0) {
      onChangeError({}, name);
    }

    onChange === null || onChange === void 0 ? void 0 : onChange(e, name);
  };

  var handleBlur = function handleBlur(e) {
    var value = e.target.value;

    if (Array.isArray(rules)) {
      var errorFlag = false;
      var errorObj = {};

      for (var i = 0; i < rules.length; i += 1) {
        var rule = rules[i] || {};
        var required = rule.required,
            pattern = rule.pattern,
            validator = rule.validator,
            _rule$message = rule.message,
            message = _rule$message === void 0 ? "".concat(name, " is required") : _rule$message;

        if (required) {
          if (!value && value !== 0) {
            errorObj = {
              error: true,
              message: message
            };
            errorFlag = true;
            break;
          }
        }

        if (pattern) {
          var isPass = pattern.test(value);

          if (!isPass) {
            errorObj = {
              error: true,
              message: message
            };
            errorFlag = true;
            break;
          }
        }

        if (validator && typeof validator === 'function') {
          var result = validator(value);

          if (!result) {
            errorObj = {
              error: true,
              message: message
            };
            errorFlag = true;
            break;
          }
        }
      }

      if (errorFlag) {
        onChangeError(errorObj, name);
      }

      if (!errorFlag) {
        onChangeError({}, name);
      }
    }
  };

  var childrenNode = children;

  if ((0, _typeof2["default"])(children) === 'object' && children !== null) {
    var _ref = children,
        childrenProps = _ref.props;

    if (childrenProps && name) {
      childrenNode = _objectSpread(_objectSpread({}, children), {}, {
        props: _objectSpread(_objectSpread({}, childrenProps), {}, {
          value: values[name],
          onChange: handleChange,
          onBlur: handleBlur
        })
      });
    }
  }

  var renderErrorNode = function renderErrorNode() {
    var height = '0';
    var errorMessage = null;

    if (name && errors[name] && errors[name].error) {
      var _errors$name;

      height = '60px';
      errorMessage = errors === null || errors === void 0 ? void 0 : (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message;
    }

    return /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: "".concat(prefixCls, "-explain"),
      style: {
        height: height
      }
    }, errorMessage);
  };

  return /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: (0, _classnames["default"])(prefixCls),
    style: style
  }, childrenNode, renderErrorNode());
};

var _default = FormItem;
exports["default"] = _default;