"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _web = require("../web");

var _cascade = _interopRequireDefault(require("../cascade"));

var _loading = _interopRequireDefault(require("../loading"));

var _popup = _interopRequireDefault(require("../popup"));

var _icon = _interopRequireDefault(require("../icon"));

var _formValue = _interopRequireDefault(require("../form-value"));

var _common = require("../common");

var prefixCls = (0, _common.getPrefixCls)('cascade-popup');

var CascadePopup = function CascadePopup(props) {
  var value = props.value,
      text = props.text,
      disabled = props.disabled,
      placeholder = props.placeholder,
      options = props.options,
      onChange = props.onChange;

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      show = _useState2[0],
      setShow = _useState2[1];

  var handleTap = function handleTap() {
    if (disabled) {
      return;
    }

    setShow(true);
  };

  var handleClose = function handleClose() {
    setShow(false);
  };

  var handleChange = function handleChange(v, s, isLast) {
    onChange(v, s);

    if (isLast) {
      setShow(false);
    }
  };

  if (!options || options.length === 0) {
    return /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: prefixCls
    }, /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: "".concat(prefixCls, "-loading")
    }, /*#__PURE__*/_react["default"].createElement(_loading["default"], null)));
  }

  return /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: prefixCls
  }, /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: "".concat(prefixCls, "-formitem"),
    onTap: handleTap
  }, /*#__PURE__*/_react["default"].createElement(_formValue["default"], {
    placeholder: placeholder
  }, text || (value === null || value === void 0 ? void 0 : value.map(function (i) {
    return i.name;
  }).join(' ')))), /*#__PURE__*/_react["default"].createElement(_popup["default"], {
    position: "bottom",
    open: show
  }, /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: "".concat(prefixCls, "-container")
  }, /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: "".concat(prefixCls, "-container-header")
  }, /*#__PURE__*/_react["default"].createElement(_web.View, null, "\u8BF7\u9009\u62E9"), /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: "".concat(prefixCls, "-container-header-close"),
    onTap: handleClose
  }, /*#__PURE__*/_react["default"].createElement(_icon["default"], {
    type: "close",
    color: "#999"
  }))), /*#__PURE__*/_react["default"].createElement(_cascade["default"], (0, _extends2["default"])({}, props, {
    onChange: handleChange
  })))));
};

var _default = CascadePopup;
exports["default"] = _default;