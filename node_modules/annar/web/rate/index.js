"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var React = _interopRequireWildcard(require("react"));

var _web = require("../web");

var _icon = _interopRequireDefault(require("../icon"));

var _common = require("../common");

var prefixCls = (0, _common.getPrefixCls)('rate');

var Rate = function Rate(props) {
  var _props$count = props.count,
      count = _props$count === void 0 ? 5 : _props$count,
      label = props.label,
      _props$value = props.value,
      value = _props$value === void 0 ? 0 : _props$value,
      onChange = props.onChange,
      readOnly = props.readOnly,
      _props$icon = props.icon,
      icon = _props$icon === void 0 ? 'favor' : _props$icon,
      _props$iconFill = props.iconFill,
      iconFill = _props$iconFill === void 0 ? 'favorfill' : _props$iconFill,
      _props$size = props.size,
      size = _props$size === void 0 ? '48px' : _props$size,
      _props$color = props.color,
      color = _props$color === void 0 ? '#FFD700' : _props$color;

  var handleClick = function handleClick(index) {
    if (readOnly) {
      return;
    }

    onChange === null || onChange === void 0 ? void 0 : onChange(index + 1);
  };

  var stars = (0, React.useMemo)(function () {
    if (!count) {
      return [];
    }

    return (0, _toConsumableArray2["default"])(new Array(count).keys());
  }, [count]);
  return /*#__PURE__*/React.createElement(_web.View, {
    className: prefixCls
  }, label ? /*#__PURE__*/React.createElement(_web.View, {
    className: "".concat(prefixCls, "-label")
  }, label) : null, /*#__PURE__*/React.createElement(_web.View, {
    className: "".concat(prefixCls, "-value")
  }, stars.map(function (item, index) {
    return /*#__PURE__*/React.createElement(_web.View, {
      key: index,
      className: "".concat(prefixCls, "-value-star"),
      onTap: function onTap() {
        handleClick(index);
      }
    }, value >= index + 1 ? /*#__PURE__*/React.createElement(_icon["default"], {
      type: iconFill,
      size: size,
      color: color
    }) : /*#__PURE__*/React.createElement(_icon["default"], {
      type: icon,
      size: size,
      color: "#999"
    }));
  })));
};

var _default = Rate;
exports["default"] = _default;