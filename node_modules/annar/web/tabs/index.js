"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _web = require("../web");

var _classnames = _interopRequireDefault(require("classnames"));

var _util = require("../_util");

var _common = require("../common");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var prefixCls = (0, _common.getPrefixCls)('tabs');
var heightUnit = 48; // const prevTabs: any[] = [];

var getTabContents = function getTabContents(children, activeKey, animated) {
  var tabContents = [];
  var tabs = [];

  _react["default"].Children.forEach(children, function (node, index) {
    var newNode = node;

    if ( /*#__PURE__*/_react["default"].isValidElement(node)) {
      return tabs.push({
        key: newNode.key,
        tab: newNode.props.tab
      }) && tabContents.push( /*#__PURE__*/_react["default"].createElement(TabContent, (0, _extends2["default"])({
        key: newNode.key
      }, newNode.props, {
        active: activeKey === undefined ? index === 0 && newNode.key : String(activeKey) === newNode.key,
        animated: animated
      })));
    }
  });

  return [tabs, tabContents];
};

var getTabIndex = function getTabIndex(tabs, activeKey) {
  var tIndex = 0;
  tabs.forEach(function (i, index) {
    if (i.key === activeKey) {
      tIndex = index;
    }
  });
  return tIndex;
};

var Tabs = function Tabs(props) {
  var type = props.type,
      _props$direction = props.direction,
      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,
      activeKey = props.activeKey,
      animated = props.animated,
      fixed = props.fixed,
      onTabClick = props.onTabClick,
      headerContent = props.headerContent,
      children = props.children,
      headerStyle = props.headerStyle,
      extra = props.extra,
      titleWidth = props.titleWidth,
      titleSquare = props.titleSquare,
      titleAlign = props.titleAlign; // 针对同一个页面出现两个Tabs，给每个Tabs一个 UniqueID

  var TABS_TITLE_ID = (0, _react.useMemo)(_util.guid, []);

  var _useMemo = (0, _react.useMemo)(function () {
    return getTabContents(children, activeKey, animated);
  }, [children]),
      _useMemo2 = (0, _slicedToArray2["default"])(_useMemo, 2),
      tabs = _useMemo2[0],
      tabContents = _useMemo2[1]; // 将 activeKey 实时转化成当前 selected 的Tab，后面都将以 selected 作为当前选择的 Tab 的标志符


  var selected = (0, _react.useMemo)(function () {
    return getTabIndex(tabs, activeKey);
  }, [activeKey, tabs]);

  var _useState = (0, _react.useState)(0),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      titleWrapperLeft = _useState2[0],
      setTitleWrapperLeft = _useState2[1];

  var _useState3 = (0, _react.useState)([]),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      titleNodes = _useState4[0],
      setTitleNodes = _useState4[1];

  (0, _react.useEffect)(function () {
    if (type === 'plain') {
      var _query$select$scrollO, _query$select;

      var query = (0, _web.createSelectorQuery)();
      (_query$select$scrollO = (_query$select = query.select(".".concat(prefixCls, "-plain-").concat(TABS_TITLE_ID))).scrollOffset) === null || _query$select$scrollO === void 0 ? void 0 : _query$select$scrollO.call(_query$select).exec(function (ret) {
        var r = Array.isArray(ret) ? ret[0] : ret;
        setTitleWrapperLeft(-((r === null || r === void 0 ? void 0 : r.scrollLeft) || 0));
      });
    }
  }, [activeKey]);
  (0, _react.useEffect)(function () {
    if (type === 'plain') {
      var query = (0, _web.createSelectorQuery)(); // 不加setTimeout的话只能获取部分的nodes(可能是部分 .anna-tabs-plain-title 节点还没来得及渲染出来)

      setTimeout(function () {
        query.selectAll(".".concat(prefixCls, "-plain-").concat(TABS_TITLE_ID, " .").concat(prefixCls, "-plain-title")).boundingClientRect().exec(function (ret) {
          var r = Array.isArray(ret) ? ret[0] : [ret];
          var nodes = (r === null || r === void 0 ? void 0 : r.map(function (i) {
            return {
              offsetLeft: i.left,
              offsetWidth: i.width
            };
          })) || []; // 解决切换tabbar导致页面渲染找不到相关节点(因为此时已经在跳转后一个页面，所以找不到)，从而使nodes这个数组为空，继而导致Tabs下标left重置为0。

          nodes.length > 0 && setTitleNodes(nodes);
        });
      }, 200);
    }
  }, [tabs.length]);

  var handleTabClick = function handleTabClick(item) {
    onTabClick === null || onTabClick === void 0 ? void 0 : onTabClick(item);
  };

  var activeKeyStr = String(activeKey);

  var renderTabs = function renderTabs() {
    var _classNames4;

    if (type === 'plain') {
      var _classNames;

      var titleNode = (titleNodes === null || titleNodes === void 0 ? void 0 : titleNodes[selected]) || {
        offsetLeft: 0,
        offsetWidth: 0
      }; // 注；此处left的位置是相对于 .anna-tabs-plain 的，不是相对于手机视窗左侧的。所以如果 .anna-tabs-plain 不能
      // 占据视窗width的100%，Tabs的下标位置就会偏右。

      var left = titleNode.offsetLeft + titleNode.offsetWidth / 2; // 解决小程序下无法获取到元素的 offsetLeft 的问题，使用 scrollOffset 来获取 scrollLeft。

      if (titleWrapperLeft < 0) {// left += Math.abs(titleWrapperLeft); //不需要这一步，因为offsetLeft是相对于父元素的，而不是相对于视窗的
      }

      return /*#__PURE__*/_react["default"].createElement(_web.View, {
        className: (0, _classnames["default"])((_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-plain"), true), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-plain-center"), titleAlign === 'center'), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-plain-").concat(TABS_TITLE_ID), true), _classNames))
      }, tabs.map(function (item) {
        var _classNames2;

        return /*#__PURE__*/_react["default"].createElement(_web.View, {
          key: item.key,
          className: (0, _classnames["default"])((_classNames2 = {}, (0, _defineProperty2["default"])(_classNames2, "".concat(prefixCls, "-plain-title"), true), (0, _defineProperty2["default"])(_classNames2, "".concat(prefixCls, "-plain-center-title"), titleAlign === 'center'), _classNames2)),
          onTap: function onTap() {
            return handleTabClick(item);
          }
        }, item.tab);
      }), /*#__PURE__*/_react["default"].createElement(_web.View, {
        className: "".concat(prefixCls, "-plain-active"),
        style: {
          transform: "translateX(".concat(left, "PX) translateX(-50%)")
        }
      }));
    }

    if (type === 'card') {
      return /*#__PURE__*/_react["default"].createElement(_web.View, {
        className: "".concat(prefixCls, "-card")
      }, tabs.map(function (item) {
        var _classNames3;

        return /*#__PURE__*/_react["default"].createElement(_web.View, {
          key: item.key,
          className: (0, _classnames["default"])((_classNames3 = {}, (0, _defineProperty2["default"])(_classNames3, "".concat(prefixCls, "-card-title"), true), (0, _defineProperty2["default"])(_classNames3, "".concat(prefixCls, "-card-active"), activeKeyStr === item.key), _classNames3)),
          onTap: function onTap() {
            return handleTabClick(item);
          }
        }, item.tab);
      }));
    }

    return /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: "".concat(prefixCls, "-slider")
    }, /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: (0, _classnames["default"])((_classNames4 = {}, (0, _defineProperty2["default"])(_classNames4, "".concat(prefixCls, "-slider-bg"), true), (0, _defineProperty2["default"])(_classNames4, "".concat(prefixCls, "-slider-bg-square"), titleSquare), _classNames4))
    }, /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: "".concat(prefixCls, "-slider-container")
    }, tabs.map(function (item) {
      return /*#__PURE__*/_react["default"].createElement(_web.View, {
        key: item.key,
        className: "".concat(prefixCls, "-slider-title"),
        style: {
          fontWeight: activeKeyStr === item.key ? 500 : 400,
          width: titleWidth ? "".concat(titleWidth, "px") : null
        },
        onTap: function onTap() {
          handleTabClick(item);
        }
      }, item.tab);
    }), /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: "".concat(prefixCls, "-slider-active"),
      style: {
        width: "".concat(100 / tabs.length, "%"),
        transform: "translateX(".concat(selected * 100, "%)")
      }
    }))), extra);
  };

  if (direction === 'vertical') {
    return /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: prefixCls
    }, /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: "".concat(prefixCls, "-vertical")
    }, /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: "".concat(prefixCls, "-vertical-sidebar")
    }, tabs === null || tabs === void 0 ? void 0 : tabs.map(function (item, index) {
      return /*#__PURE__*/_react["default"].createElement(_web.View, {
        key: item.key,
        className: "".concat(prefixCls, "-vertical-sidebar-item"),
        style: {
          fontWeight: selected === index ? 500 : 400,
          backgroundColor: selected === index ? '#FDFFFD' : '#FAFAFA'
        },
        onTap: function onTap() {
          return handleTabClick(item);
        }
      }, item.tab, selected === index && /*#__PURE__*/_react["default"].createElement(_web.View, {
        className: "".concat(prefixCls, "-vertical-sidebar-top")
      }, /*#__PURE__*/_react["default"].createElement(_web.View, {
        className: "".concat(prefixCls, "-vertical-sidebar-top-circle")
      })), selected === index && /*#__PURE__*/_react["default"].createElement(_web.View, {
        className: "".concat(prefixCls, "-vertical-sidebar-bottom")
      }, /*#__PURE__*/_react["default"].createElement(_web.View, {
        className: "".concat(prefixCls, "-vertical-sidebar-bottom-circle")
      })));
    }), /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: "".concat(prefixCls, "-vertical-sidebar-active"),
      style: {
        transform: "translate3d(0, ".concat(selected * heightUnit, "PX, 0)")
      }
    })), /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: "".concat(prefixCls, "-vertical-content")
    }, tabContents)));
  }

  return /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: prefixCls
  }, /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: (0, _classnames["default"])("".concat(prefixCls, "-header"), (0, _defineProperty2["default"])({}, "".concat(prefixCls, "-header-fixed"), fixed)),
    style: _objectSpread({}, headerStyle)
  }, renderTabs(), /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: "".concat(prefixCls, "-header-content")
  }, headerContent)), /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: "".concat(prefixCls, "-content")
  }, /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: "".concat(prefixCls, "-content-wrapper"),
    style: animated ? {
      transition: "all 0.3s ease",
      transform: "translate3d(".concat(-selected * 100, "%, 0, 0)")
    } : {}
  }, tabContents)));
};

var TabContent = function TabContent(props) {
  var active = props.active,
      style = props.style,
      animated = props.animated,
      children = props.children;

  if (!active) {
    var _classNames6;

    return /*#__PURE__*/_react["default"].createElement(_web.View, {
      className: (0, _classnames["default"])("".concat(prefixCls, "-content-tab"), (_classNames6 = {}, (0, _defineProperty2["default"])(_classNames6, "".concat(prefixCls, "-content-tab-inactive"), !animated), (0, _defineProperty2["default"])(_classNames6, "".concat(prefixCls, "-content-tab-inactive-animated"), animated), _classNames6)),
      style: style
    }, children);
  }

  return /*#__PURE__*/_react["default"].createElement(_web.View, {
    className: "".concat(prefixCls, "-content-tab"),
    style: style
  }, children);
};

Tabs.TabContent = TabContent;
var _default = Tabs;
exports["default"] = _default;