"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _web = require("../web");

var _classnames = _interopRequireDefault(require("classnames"));

var _common = require("../common");

var prefixCls = (0, _common.getPrefixCls)('input');

var AnnarInput = function AnnarInput(props) {
  var name = props.name,
      type = props.type,
      size = props.size,
      value = props.value,
      prefix = props.prefix,
      suffix = props.suffix,
      className = props.className,
      style = props.style,
      inputStyle = props.inputStyle,
      align = props.align,
      placeholder = props.placeholder,
      disabled = props.disabled,
      maxLength = props.maxLength,
      onChange = props.onChange,
      onFocus = props.onFocus,
      onBlur = props.onBlur;

  var _type = type === 'password' ? 'text' : type;

  var inputElement = /*#__PURE__*/React.createElement(_web.Input, {
    className: (0, _classnames["default"])(prefixCls, (0, _defineProperty2["default"])({}, "".concat(prefixCls, "-align-").concat(align), align)),
    style: inputStyle,
    name: name // @ts-ignore
    ,
    type: _type,
    password: type === 'password',
    value: value,
    placeholder: placeholder,
    disabled: disabled,
    maxLength: maxLength,
    onInput: onChange,
    onFocus: onFocus,
    onBlur: onBlur
  });
  return /*#__PURE__*/React.createElement(_web.View, {
    className: (0, _classnames["default"])("".concat(prefixCls, "-wrapper"), (0, _defineProperty2["default"])({}, "".concat(prefixCls, "-wrapper-").concat(size), size), className),
    style: style
  }, /*#__PURE__*/React.createElement(_web.View, {
    className: "".concat(prefixCls, "-prefix")
  }, prefix), inputElement, /*#__PURE__*/React.createElement(_web.View, {
    className: "".concat(prefixCls, "-suffix")
  }, suffix));
};

var _default = AnnarInput;
exports["default"] = _default;