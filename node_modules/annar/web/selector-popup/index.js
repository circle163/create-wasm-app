"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var React = _interopRequireWildcard(require("react"));

var _web = require("../web");

var _popup = _interopRequireDefault(require("../popup"));

var _selector = _interopRequireDefault(require("../selector"));

var _formValue = _interopRequireDefault(require("../form-value"));

var _common = require("../common");

var prefixCls = (0, _common.getPrefixCls)('selector-popup');

var SelectorPopup = function SelectorPopup(props) {
  var placeholder = props.placeholder,
      children = props.children,
      title = props.title,
      onChange = props.onChange;

  var _useState = (0, React.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      show = _useState2[0],
      setShow = _useState2[1];

  var handleTap = function handleTap() {
    setShow(true);
  };

  var handleClose = function handleClose() {
    setShow(false);
  };

  var handleChange = function handleChange(value, valueStr) {
    onChange === null || onChange === void 0 ? void 0 : onChange(value, valueStr);
    handleClose();
  };

  return /*#__PURE__*/React.createElement(_web.View, {
    className: prefixCls
  }, /*#__PURE__*/React.createElement(_web.View, {
    className: "".concat(prefixCls, "-formitem"),
    onTap: handleTap
  }, /*#__PURE__*/React.createElement(_formValue["default"], {
    placeholder: placeholder
  }, children)), /*#__PURE__*/React.createElement(_popup["default"], {
    position: "bottom",
    title: title,
    closeable: true,
    open: show,
    onClose: handleClose
  }, /*#__PURE__*/React.createElement(_web.View, {
    className: "".concat(prefixCls, "-container")
  }, /*#__PURE__*/React.createElement(_selector["default"], (0, _extends2["default"])({}, props, {
    style: {
      height: '540px'
    },
    onChange: handleChange
  })))));
};

var _default = SelectorPopup;
exports["default"] = _default;