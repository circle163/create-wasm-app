import _extends from "@babel/runtime/helpers/esm/extends";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import * as React from 'react';
import { useState } from 'react';
import { View } from 'remax/one';
import Popup from '../popup';
import Selector from '../selector';
import FormValue from '../form-value';
import { getPrefixCls } from '../common';
var prefixCls = getPrefixCls('selector-popup');

var SelectorPopup = function SelectorPopup(props) {
  var placeholder = props.placeholder,
      children = props.children,
      title = props.title,
      onChange = props.onChange;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      show = _useState2[0],
      setShow = _useState2[1];

  var handleTap = function handleTap() {
    setShow(true);
  };

  var handleClose = function handleClose() {
    setShow(false);
  };

  var handleChange = function handleChange(value, valueStr) {
    onChange === null || onChange === void 0 ? void 0 : onChange(value, valueStr);
    handleClose();
  };

  return /*#__PURE__*/React.createElement(View, {
    className: prefixCls
  }, /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefixCls, "-formitem"),
    onTap: handleTap
  }, /*#__PURE__*/React.createElement(FormValue, {
    placeholder: placeholder
  }, children)), /*#__PURE__*/React.createElement(Popup, {
    position: "bottom",
    title: title,
    closeable: true,
    open: show,
    onClose: handleClose
  }, /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefixCls, "-container")
  }, /*#__PURE__*/React.createElement(Selector, _extends({}, props, {
    style: {
      height: '540px'
    },
    onChange: handleChange
  })))));
};

export default SelectorPopup;