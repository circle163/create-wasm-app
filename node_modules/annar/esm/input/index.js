import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import * as React from 'react';
import { Input, View } from 'remax/one';
import classNames from 'classnames';
import { getPrefixCls } from '../common';
var prefixCls = getPrefixCls('input');

var AnnarInput = function AnnarInput(props) {
  var name = props.name,
      type = props.type,
      size = props.size,
      value = props.value,
      prefix = props.prefix,
      suffix = props.suffix,
      className = props.className,
      style = props.style,
      inputStyle = props.inputStyle,
      align = props.align,
      placeholder = props.placeholder,
      disabled = props.disabled,
      maxLength = props.maxLength,
      onChange = props.onChange,
      onFocus = props.onFocus,
      onBlur = props.onBlur;

  var _type = type === 'password' ? 'text' : type;

  var inputElement = /*#__PURE__*/React.createElement(Input, {
    className: classNames(prefixCls, _defineProperty({}, "".concat(prefixCls, "-align-").concat(align), align)),
    style: inputStyle,
    name: name // @ts-ignore
    ,
    type: _type,
    password: type === 'password',
    value: value,
    placeholder: placeholder,
    disabled: disabled,
    maxLength: maxLength,
    onInput: onChange,
    onFocus: onFocus,
    onBlur: onBlur
  });
  return /*#__PURE__*/React.createElement(View, {
    className: classNames("".concat(prefixCls, "-wrapper"), _defineProperty({}, "".concat(prefixCls, "-wrapper-").concat(size), size), className),
    style: style
  }, /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefixCls, "-prefix")
  }, prefix), inputElement, /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefixCls, "-suffix")
  }, suffix));
};

export default AnnarInput;