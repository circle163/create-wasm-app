import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import * as React from 'react';
import { View } from 'remax/one';
import classNames from 'classnames';
import { getPrefixCls } from '../common';
var prefixCls = getPrefixCls('mask');

var Mask = function Mask(props) {
  var _classNames;

  var show = props.show,
      onTap = props.onTap,
      zIndex = props.zIndex,
      style = props.style,
      children = props.children;
  var maskZindex = zIndex || zIndex === 0 ? zIndex : 999;
  return /*#__PURE__*/React.createElement(View, {
    className: classNames((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, "".concat(prefixCls, "_active"), show), _classNames)),
    style: _objectSpread(_objectSpread({}, style), {}, {
      zIndex: maskZindex
    }),
    onTap: onTap
  }, children);
};

export default Mask;