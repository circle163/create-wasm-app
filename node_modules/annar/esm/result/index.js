import * as React from 'react';
import { View } from 'remax/one';
import Icon from '../icon';
import { getPrefixCls } from '../common';
var prefixCls = getPrefixCls('result');

var getIconNameByStatus = function getIconNameByStatus(status) {
  var obj = {
    name: 'infofill',
    color: '#1890ff'
  };

  switch (status) {
    case 'info':
      obj = {
        name: 'infofill',
        color: '#1890ff'
      };
      break;

    case 'success':
      obj = {
        name: 'roundcheckfill',
        color: '#52c41a'
      };
      break;

    case 'warning':
      obj = {
        name: 'warnfill',
        color: '#faad14'
      };
      break;

    case 'error':
      obj = {
        name: 'roundclosefill',
        color: '#f5222d'
      };
      break;

    default:
      break;
  }

  return obj;
};

var Result = function Result(props) {
  var _props$status = props.status,
      status = _props$status === void 0 ? 'info' : _props$status,
      title = props.title,
      subTitle = props.subTitle,
      extra = props.extra,
      children = props.children,
      icon = props.icon,
      height = props.height;
  var isCustomIcon = false;
  var iconObj = getIconNameByStatus(status);

  if (icon) {
    if (Object.prototype.toString.call(icon) === '[object Object]') {
      iconObj = icon;
    } else {
      isCustomIcon = true;
    }
  }

  return /*#__PURE__*/React.createElement(View, {
    className: prefixCls,
    style: {
      height: height || '100vh'
    }
  }, /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefixCls, "-icon")
  }, isCustomIcon ? icon : /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefixCls, "-icon-status")
  }, /*#__PURE__*/React.createElement(Icon, {
    type: iconObj.name,
    color: iconObj.color,
    size: "168px"
  }))), /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefixCls, "-title")
  }, title), /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefixCls, "-sub_title")
  }, subTitle), children ? /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefixCls, "-content")
  }, children) : null, /*#__PURE__*/React.createElement(View, {
    className: "".concat(prefixCls, "-extra")
  }, extra));
};

export default Result;